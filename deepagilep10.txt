//package agilep10;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;


public class agilep10 {


	public static void main(String[] args) 
	
	{
	
		// TODO Auto-generated method stub
		String line,name="";
		String[] lineParts;
		
		
		
		
	

		
		
		System.out.println(":::::::::::::::::::::::::::::::::::::::::::");
		System.out.println("         Divorce before marriage           ");
		System.out.println(":::::::::::::::::::::::::::::::::::::::::::");

		
		try
		
		{	
		
			FileReader d1 = new FileReader("Team 3.ged");
			BufferedReader fbuf = new BufferedReader(d1);
			BufferedReader br1 = fbuf;
			boolean flag=false,flag1=false,flag2=false,flag_spouse=false;
			String mMonth,MMonth,code="";
			int dDay=0,yYear=0,DDay=0,YYear=0, mmon=0,dmon=0;
			String line_spouse,spousegender="";
			String [] lineParts_spouse;
			
			
			while ((line = br1.readLine()) != null)
				
			{
			
				lineParts = line.trim().split(" ");
			
	          
				
	            
				if(lineParts[1].equalsIgnoreCase("GIVN")) 
	            
				{
	            	name=lineParts[2];
	            }
				if(lineParts.length>2){
					if(lineParts[2].equalsIgnoreCase("FAM"))
				
				{
				     code=lineParts[1];
		             flag=false;
		             flag1=false;
		             flag2=false;
					//System.out.println("inside gender"+gender);
				}
				}
				if(lineParts[1].equalsIgnoreCase("MARR"))
				{
					line = br1.readLine();
					lineParts = line.trim().split(" ");
					if(lineParts[2].equalsIgnoreCase("BEF") || lineParts[2].equalsIgnoreCase("AFT"))
					{
						dDay=Integer.parseInt(lineParts[3]);
						mMonth=lineParts[4];
						yYear=Integer.parseInt(lineParts[5]);
					}
					else{
					dDay=Integer.parseInt(lineParts[2]);
					mMonth=lineParts[3];
					yYear=Integer.parseInt(lineParts[4]);
					}
					if(mMonth.equalsIgnoreCase("JAN")) mmon=1;
					else if (mMonth.equalsIgnoreCase("FEB")) mmon=2;
					else if (mMonth.equalsIgnoreCase("MAR")) mmon=3;
					else if (mMonth.equalsIgnoreCase("APR")) mmon=4;
					else if (mMonth.equalsIgnoreCase("MAY")) mmon=5;
					else if (mMonth.equalsIgnoreCase("JUN")) mmon=6;
					else if (mMonth.equalsIgnoreCase("JUL")) mmon=7;
					else if (mMonth.equalsIgnoreCase("AUG")) mmon=8;
					else if (mMonth.equalsIgnoreCase("SEP")) mmon=9;
					else if (mMonth.equalsIgnoreCase("OCT")) mmon=10;
					else if (mMonth.equalsIgnoreCase("NOV")) mmon=11;
					else mmon=12;
					flag1=true;
					
				}
				if(lineParts[1].equalsIgnoreCase("DIV"))
				{
					line = br1.readLine();
					lineParts = line.trim().split(" ");
					if(lineParts[2].equalsIgnoreCase("BEF") || lineParts[2].equalsIgnoreCase("AFT"))
					{
						DDay=Integer.parseInt(lineParts[3]);
						
						MMonth=lineParts[4];
						YYear=Integer.parseInt(lineParts[5]);
					}
					else
					{
						DDay=Integer.parseInt(lineParts[2]);
					
					MMonth=lineParts[3];
					YYear=Integer.parseInt(lineParts[4]);
				}
					if(MMonth.equalsIgnoreCase("JAN")) dmon=1;
					else if (MMonth.equalsIgnoreCase("FEB")) dmon=2;
					else if (MMonth.equalsIgnoreCase("MAR")) dmon=3;
					else if (MMonth.equalsIgnoreCase("APR")) dmon=4;
					else if (MMonth.equalsIgnoreCase("MAY")) dmon=5;
					else if (MMonth.equalsIgnoreCase("JUN")) dmon=6;
					else if (MMonth.equalsIgnoreCase("JUL")) dmon=7;
					else if (MMonth.equalsIgnoreCase("AUG")) dmon=8;
					else if (MMonth.equalsIgnoreCase("SEP")) dmon=9;
					else if (MMonth.equalsIgnoreCase("OCT")) dmon=10;
					else if (MMonth.equalsIgnoreCase("NOV")) dmon=11;
					else dmon=12;
					flag2=true;
					
				}
				
				if(flag1==true && flag2==true )
				{ 
					//System.out.println("Marr date"+dDay+" "+mmon+" "+yYear);
					//System.out.println("DIV date"+DDay+" "+dmon+" "+YYear);
					if(YYear<yYear) flag=true;
					else if(YYear==yYear)
					{
						if(dmon<mmon) flag=true;
						else if(dmon==mmon)
						{
							if(dDay>DDay) flag=true;
							else flag=false;
						}
						else flag=false;
					}
					else flag =false;
					if(flag==true){
				  flag1=false;
				  flag2=false;
			//	System.out.println("enter inner for "+code);
					try
					
					{	
					
						FileReader d2 = new FileReader("Team 3.ged");
						BufferedReader bread1 = new BufferedReader(d2);
						line_spouse = bread1.readLine();
						for(;line_spouse !=null;)	
						{
							lineParts_spouse = line_spouse.trim().split(" ");
							if(lineParts_spouse.length>2)
							{
							if(lineParts_spouse[2].equalsIgnoreCase("INDI")) 
				            {
				            
								name="";
				            	
				            }
							}
							if(lineParts_spouse[1].equalsIgnoreCase("GIVN")) 
					            
							{
				            	name=lineParts_spouse[2];
				            }
							if(lineParts_spouse.length>1)
							{
							
							if(lineParts_spouse[1].equalsIgnoreCase("FAMS"))
							{
								//System.out.println(" name = "+name);
								if(code.equalsIgnoreCase(lineParts_spouse[2]))
							{
									//System.out.println("name="+name);
									flag_spouse=true;
									break;
							}
								
							}
							
							}
							line_spouse = bread1.readLine();
					}
						if(flag_spouse)
						{
							System.out.println(name+" has marriage date after divorce date");
							name="";
							flag_spouse=false;
						}
					}
					catch(Exception e)
					{
						
					}}
				}
				 
			}
			
				
		}
        
		catch(IOException ioe)
		
		{

			System.out.println("Error is :"+ioe.getMessage());
		
		}
		
		System.out.println(":::::::::::::::::::::::::::::::::::::::::::");
		System.out.println("            Check divorce date             ");
		System.out.println(":::::::::::::::::::::::::::::::::::::::::::");

		
		try
		
		{	
		
			FileReader d1 = new FileReader("Team 3.ged");
			BufferedReader fbuf = new BufferedReader(d1);
			BufferedReader br1 = fbuf;
			boolean flag=false,flag1=false,flag2=false,flag_spouse=false;
			String mMonth,MMonth="",code="";
			int dDay=0,yYear=0,DDay=0,YYear=0, mmon=0,dmon=0;
			String line_spouse,spousegender="";
			String [] lineParts_spouse;
			
			
			while ((line = br1.readLine()) != null)
				
			{
			
				lineParts = line.trim().split(" ");
			
	          
				
	            
				if(lineParts[1].equalsIgnoreCase("GIVN")) 
	            
				{
	            	name=lineParts[2];
	            }
				if(lineParts.length>2){
					if(lineParts[2].equalsIgnoreCase("FAM"))
				
				{
				     code=lineParts[1];
		             flag=false;
		             flag1=false;
		             flag2=false;
					//System.out.println("inside gender"+gender);
				}
				}
				
				if(lineParts[1].equalsIgnoreCase("DIV"))
				{
					line = br1.readLine();
					lineParts = line.trim().split(" ");
					if(lineParts[2].equalsIgnoreCase("BEF") || lineParts[2].equalsIgnoreCase("AFT"))
					{
						DDay=Integer.parseInt(lineParts[3]);
						
						MMonth=lineParts[4];
						YYear=Integer.parseInt(lineParts[5]);
					}
					else
					{
						DDay=Integer.parseInt(lineParts[2]);
					
					MMonth=lineParts[3];
					YYear=Integer.parseInt(lineParts[4]);
				}
					
					flag2=true;
					
				}
				
				if( flag2==true )
				{ 
					//System.out.println("Marr date"+dDay+" "+mmon+" "+yYear);
					//System.out.println("DIV date"+DDay+" "+dmon+" "+YYear);
				
				  flag1=false;
				  flag2=false;
			//	System.out.println("enter inner for "+code);
					try
					
					{	
					
						FileReader d2 = new FileReader("Team 3.ged");
						BufferedReader bread1 = new BufferedReader(d2);
						line_spouse = bread1.readLine();
						for(;line_spouse !=null;)	
						{
							lineParts_spouse = line_spouse.trim().split(" ");
							if(lineParts_spouse.length>2)
							{
							if(lineParts_spouse[2].equalsIgnoreCase("INDI")) 
				            {
				            
								name="";
				            	
				            }
							}
							if(lineParts_spouse[1].equalsIgnoreCase("GIVN")) 
					            
							{
				            	name=lineParts_spouse[2];
				            }
							if(lineParts_spouse.length>1)
							{
							
							if(lineParts_spouse[1].equalsIgnoreCase("FAMS"))
							{
								//System.out.println(" name = "+name);
								if(code.equalsIgnoreCase(lineParts_spouse[2]))
							{
									//System.out.println("name="+name);
									flag_spouse=true;
									break;
							}
								
							}
							
							}
							line_spouse = bread1.readLine();
					}
						if(flag_spouse)
						{
							System.out.println(name+" divorced on "+DDay+" "+MMonth+" "+YYear);
							name="";
							flag_spouse=false;
						}
					}
					catch(Exception e)
					{
						
					}}
				}
				 
			
			
				
		}
        
		catch(IOException ioe)
		
		{

			System.out.println("Error is :"+ioe.getMessage());
		
		}
		
		
				
		
	}

}









